function _flashgit_module {
	local cur prev words cword
	_init_completion -n = || return

	case $cur in
	--device=*)
		cur=${cur#*=}
		tmp=$(ls /dev/sd* -1)
		COMPREPLY=( $(compgen -W "$tmp" ) )
		return
		;;
	--fake-device=*)
		cur=${cur#*=}
		if [ -d fakeDevices ]
		then
			pushd fakeDevices > /dev/null
			tmp=$(ls ${cur}* -1)
			popd > /dev/null
		fi
		COMPREPLY=( $(compgen -W "$tmp" ) )
		return
		;;
	--sandbox=*)
		cur=${cur#*=}
		if [ -d sandboxes ]
		then
			pushd sandboxes > /dev/null
			tmp=$(ls ${cur}* -1)
			popd > /dev/null
		fi
		COMPREPLY=( $(compgen -W "$tmp") )
		return
		;;
	esac

	COMPREPLY=( $(compgen -W '$(_parse_help "$1")' -- "$cur") \
		$(compgen -- "$cur") )

	[[ $COMPREPLY == *= ]] && compopt -o nospace


#	local cur prev OPTS
#	COMPREPLY=()
#	cur="${COMP_WORDS[COMP_CWORD]}"
#	prev="${COMP_WORDS[COMP_CWORD-1]}"
#	case $prev in
#		'--device=')
#			COMPREPLY=(ls -1 /dev/sd*)
#			return 0
#			;;
#		'-h'|'--help'|'-V'|'--version')
#			return 0
#			;;
#	esac
#	case $cur in
#		-*)
#			#OPTS=( --help --device= --fake-device= --repo-list= --sandbox= --user= --group= --create-fake-device= --create-sandbox= --show-fake-device= --show-sandbox= --list-fake-devices --list-sandboxes --remove-fake-device= --remove-sandbox=)
#			OPTS=( --help --list-fake-devices --list-sandboxes "--device=" )
#			COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
#			return 0
#			;;
#	esac
#	compopt -o bashdefault -o default
#	#COMPREPLY=( $(compgen -W "$(lsblk -pnro name)" -- $cur) )
#	#COMPREPLY=( --help --device= --fake-device= --repo-list= --sandbox= --user= --group= --create-fake-device= --create-sandbox= --show-fake-device= --show-sandbox= --list-fake-devices --list-sandboxes --remove-fake-device= --remove-sandbox=)
#	COMPREPLY=()
#	return 0
} && complete -F _flashgit_module flash-git
